<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	
	<!-- 
		在spring环境下
			使用spring提供的spring-data-redis组件
			实现对redis缓存系统的连接.
		* 使用hibernate连接mysql 连接过程 : 
			1 配置数据源(连接池) DataSource 
			2 配置连接工厂(SessionFactory)
			3 配置模板类对象(HibernateTemplate)
			4 注入给DAO -> 实现对数据库的连接操作
		* 使用jedis连接redis 连接过程 : 
			4 注入给Service -> 实现对redis的连接操作
	 -->
	<!-- 1 配置连接池 PoolConfig  -->
	<context:property-placeholder location="classpath:redis.properties"/>
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig"
		p:maxTotal="${redis.pool.maxActive}"
		p:maxIdle="${redis.pool.maxIdle}"
		p:maxWaitMillis="${redis.pool.maxWaitMillis}"/>
	<!-- 2 配置连接工厂  JedisConnection -->
	<bean id="conFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:hostName="${redis.host}"
		p:port="${redis.port}"
		p:poolConfig-ref="poolConfig"/>
	<!-- 3 配置模板类   RedisTemplate -->
	<bean class="org.springframework.data.redis.core.RedisTemplate"
		p:connectionFactory-ref="conFactory"/>
	<context:component-scan base-package="com.etoak.service"/>
	
</beans>














